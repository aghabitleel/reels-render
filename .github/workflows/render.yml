name: Render Reel

on:
  repository_dispatch:
    types: [render_reel]

jobs:
  render:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download videos
        run: |
          echo "Downloading videos..."
          IFS=',' read -ra URLS <<< "${{ join(github.event.client_payload.video_urls, ',') }}"
          index=1
          for url in "${URLS[@]}"; do
            echo "Downloading video $index from $url"
            curl -L -o "in_${index}.mp4" "$url"
            index=$((index + 1))
          done
      
      - name: Download audio
        run: |
          echo "Downloading audio from ${{ github.event.client_payload.audio_url }}"
          curl -L -o "audio.mp3" "${{ github.event.client_payload.audio_url }}"
      
      - name: Normalize each clip to vertical and mute
        run: |
          for f in in_*.mp4; do
            out="norm_${f#in_}"
            echo "Processing $f -> $out"
            ffmpeg -i "$f" \
              -vf "scale='if(gt(iw/ih,9/16),1080,-2)':'if(gt(iw/ih,9/16),-2,1920)',crop=1080:1920" \
              -an \
              -c:v libx264 -preset fast -crf 23 \
              "$out"
          done
      
      - name: Create concat list
        run: |
          for f in norm_*.mp4; do
            echo "file '$f'" >> concat.txt
          done
          cat concat.txt
      
      - name: Concatenate clips
        run: |
          ffmpeg -f concat -safe 0 -i concat.txt -c copy concatenated.mp4
      
      - name: Add audio
        run: |
          ffmpeg -i concatenated.mp4 -i audio.mp3 \
            -c:v copy \
            -c:a aac \
            -map 0:v:0 -map 1:a:0 \
            -shortest \
            "${{ github.event.client_payload.out_name }}"
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rendered-reel
          path: ${{ github.event.client_payload.out_name }}
          retention-days: 7
